---
title: "Cleaning & Wrangling"
format: html
editor: visual
---
# Data Sources

```{r}
#| message: false 
# load packages 
library(dplyr)
library(tidyr)
library(readr)
```

Code chunks
Apple shortcut: Cmd + Option + I
Windows shortcut: Ctrl + Alt + I

## Read in our data
```{r}
catch_original <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/df35b.302.1")
```

## Explore
```{r}
# Prints the column names of my data frame
colnames(catch_original)

# First 6 lines of the data frame
head(catch_original)

# Summary of each column of data
summary(catch_original)

# Prints unique values in a column (in this case, the region)
unique(catch_original$Region)
```

# Clean and Reshape Data

Pipe operator (%>%)
Apple shortcut: Cmd + Shift + M
Windows shortcut: Ctrl + Shift + M

df

Instead of writing:
df_filtered <- filter(df, ...)
df_selected <- select(df_filtered, ...)

You can write:
df_cleaned <- df %>% 
    filter(...) %>%
    select(...)
    
## Using select() function
```{r}
catch_data <- catch_original %>% 
  # select only the columns we want 
  select(Region, Year, Chinook, Sockeye, Coho, Pink, Chum)

head(catch_data)
```

```{r}
catch_data <- catch_original %>% 
  # you can also say which columns you don't want with the minus (-) sign!
  select(-All, -notesRegCode)

head(catch_data)
```

## Check column types
```{r}
glimpse(catch_data)
```

## Replace values in a column
```{r}
catch_clean <- catch_data %>% 
  # change Chinook column to numeric
  mutate(Chinook = as.numeric(Chinook))
```

```{r}
# find NA values
i <- which(is.na(catch_clean$Chinook))
i
```

```{r}
catch_data[i,]
```

```{r}
catch_clean <- catch_data %>% 
  # if the Chinook column contains "I" as a value,
  mutate(Chinook = if_else(condition = Chinook == "I", 
                           # change it to "1",
                           true = "1",
                           # otherwise, keep the current value
                           false = Chinook), 
         Chinook = as.numeric(Chinook))

catch_clean[i,]
```

## Reshaping
```{r}
catch_long <- catch_clean %>% 
  # pivot longer all columns except Region and Year
  pivot_longer(cols = -c(Region, Year),
               names_to = "species",
               values_to = "catch")

head(catch_long)
```

```{r}
# pivot wider works similarly 
catch_wide <- catch_long %>%
  pivot_wider(names_from = species,
              values_from = catch)

head(catch_wide)
```

## Rename columns with rename()
```{r}
catch_long <- catch_long %>% 
  rename(catch_thousands = catch)

head(catch_long)
```

```{r}
catch_long <- catch_long %>% 
  # create a new column
  mutate(catch = catch_thousands * 1000)

head(catch_long)
```

## Summary stats using group_by() and summarize()

Suppose we're now interested in getting the average catch per region. We can use the split-apply-combine strategy to accomplish this!
```{r}
unique(catch_original$Region)
```

```{r}
# get average catch by region
mean_region <- catch_long %>% 
  # split the dataframe and create a group for each different value in Region
  group_by(Region) %>% 
  # apply the mean() function to each group
  # and combine the results of each group into a single table
  summarize(mean_catch = mean(catch))

head(mean_region)
```

```{r}
# another common use for group_by() and summarize()
n_region <- catch_long %>% 
  group_by(Region) %>% 
  # count the number of rows in each group
  summarize(n = n())

head(n_region)
```
```{r}
# an alternative method to do the same thing
n_region <- catch_long %>%
  count(Region)

head(n_region)
```

## Filtering rows using filter()
```{r}
sse_catch <- catch_long %>% 
  # get all the rows where the Region is SSE
  filter(Region == "SSE")

head(sse_catch)
```


```{r}
# quick exercise

# filter to catches over one million fish 
one_mil <- catch_long %>% 
  filter(catch > 1000000)

# filter to just Chinook for SSE
just_chinook <- catch_long %>% 
  filter(species == "Chinook" & Region == "SSE")
```

## Sorting data using arrange()
```{r}
mean_region <- catch_long %>% 
  group_by(Region) %>% 
  summarize(mean_catch = mean(catch)) %>% 
  # sort by ascending order
  arrange(mean_catch)

head(mean_region)
```

```{r}
mean_region <- catch_long %>% 
  group_by(Region) %>% 
  summarize(mean_catch = mean(catch)) %>% 
  # sort by descending order
  arrange(desc(mean_catch))

head(mean_region)
```

## Split and combine values in columns
```{r}
# create some fake data
sites_df <- data.frame(site = c("HAW-101",
                                "HAW-103",
                                "OAH-320",
                                "OAH-219",
                                "MAU-039"))

head(sites_df)
```

```{r}
split_df <- sites_df %>% 
  # separate by "-" delimiter
  separate(site, c("island", "site_number"), "-")

head(split_df)
```

```{r}
# quick exercise

# create `cities_df`
cities_df <- data.frame(city = c("Juneau AK",
                                 "Sitka AK",
                                 "Anchorage AK"))

result <- cities_df %>% 
  separate(city, c("city", "state_code"), " ")

head(result)
```

```{r}
# create `date_df`
date_df <- data.frame(
  year = c("1930", "1930", "1930"),
  month = c("12", "12", "12"),
  day = c("14", "15", "16")
)

head(date_df)
```

```{r}
dates_unite <- date_df %>% 
  # unite the columns with a "-" separator
  unite(date, year, month, day, sep = "-")

head(dates_unite)
```

```{r}
# now let's run all these operations together!

catch_original <- read_csv("https://knb.ecoinformatics.org/knb/d1/mn/v2/object/df35b.302.1")

mean_region <- catch_original %>% 
  select(-All, -notesRegCode) %>% 
  mutate(Chinook = if_else(Chinook == "I", "1", Chinook)) %>% 
  mutate(Chinook = as.numeric(Chinook)) %>% 
  pivot_longer(-c(Region, Year),
               names_to = "species",
               values_to = "catch") %>% 
  mutate(catch = catch *1000) %>% 
  group_by(Region) %>% 
  summarize(mean_catch = mean(catch)) %>% 
  arrange(desc(mean_catch))
```
